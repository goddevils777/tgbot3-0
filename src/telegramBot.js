const TelegramBot = require('node-telegram-bot-api');

class TelegramBotAuth {
    constructor(telegramAuthManager) {
        this.telegramAuthManager = telegramAuthManager;
        this.bot = new TelegramBot(process.env.BOT_TOKEN, { polling: true });
        this.setupHandlers();
    }

    setupHandlers() {

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        this.bot.onText(/\/start (.+)/, async (msg, match) => {
            const chatId = msg.chat.id;
            const authToken = match[1];
            
            console.log(`–ü–æ–ª—É—á–µ–Ω —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${authToken} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${msg.from.id}`);

            // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
            const result = this.telegramAuthManager.confirmAuth(authToken, msg.from);
            
            if (result.success) {
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                this.telegramAuthManager.setAuthSuccess(authToken, result.userId);
                
                await this.bot.sendMessage(chatId, 
                    `‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!\n\n` +
                    `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${msg.from.first_name}!\n` +
                    `–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.`,
                    {
                        reply_markup: {
                            inline_keyboard: [[
                                { text: 'üåê –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ', url: 'https://tgbotparsser.up.railway.app' }
                            ]]
                        }
                    }
                );
            } else {
                await this.bot.sendMessage(chatId, 
                    `‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${result.error}\n\n` +
                    `–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –≤—Ö–æ–¥–∞.`
                );
            }
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã /start
        this.bot.onText(/\/start$/, async (msg) => {
            const chatId = msg.chat.id;
            
            await this.bot.sendMessage(chatId,
                `üëã –ü—Ä–∏–≤–µ—Ç, ${msg.from.first_name}!\n\n` +
                `–≠—Ç–æ—Ç –±–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.\n\n` +
                `–ß—Ç–æ–±—ã –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É:\n` +
                `1. –ù–∞–∂–º–∏—Ç–µ "–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Telegram" –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏\n` +
                `2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–∫—Ä–æ–µ—Ç —ç—Ç–æ—Ç —á–∞—Ç\n` +
                `3. –ù–∞–∂–º–∏—Ç–µ /start —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏`,
                {
                    reply_markup: {
                        inline_keyboard: [[
                            { text: 'üåê –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ', url: 'https://tgbotparsser.up.railway.app' }
                        ]]
                    }
                }
            );
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
        this.bot.on('error', (error) => {
            console.error('–û—à–∏–±–∫–∞ Telegram –±–æ—Ç–∞:', error);
        });

        console.log('Telegram –±–æ—Ç –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∑–∞–ø—É—â–µ–Ω');
    }
}

module.exports = TelegramBotAuth;