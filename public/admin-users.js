// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
let allUsers = [];

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener('DOMContentLoaded', async () => {
    await loadUserInfo();
    await loadAdminUsers();
    setupEventHandlers();
});

// –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ (–∞–¥–º–∏–Ω–µ)
async function loadUserInfo() {
    try {
        const response = await fetch('/api/user-info');
        const data = await response.json();
        
        const userInfoDiv = document.getElementById('userInfo');
        
        if (data.success && data.user) {
            userInfoDiv.innerHTML = `üë§ ${data.user.login} (–ê–¥–º–∏–Ω)`;
            userInfoDiv.className = 'session-info';
        } else {
            userInfoDiv.innerHTML = 'üë§ –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞';
            userInfoDiv.className = 'session-info no-session';
            setTimeout(() => window.location.href = '/', 2000);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:', error);
        document.getElementById('userInfo').innerHTML = 'üë§ –û—à–∏–±–∫–∞';
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
async function loadAdminUsers() {
    try {
        const response = await fetch('/api/admin/users');
        const data = await response.json();
        
        if (data.success) {
            allUsers = data.users;
            updateUsersStats();
            displayAdminUsers(allUsers);
        } else {
            if (data.error === '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞') {
                alert('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏');
                window.location.href = '/';
                return;
            }
            throw new Error(data.error);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
        document.getElementById('adminUsersList').innerHTML = 
            '<div class="users-loading">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</div>';
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
function updateUsersStats() {
    const total = allUsers.length;
    const active = allUsers.filter(u => !u.isBlocked).length;
    const blocked = allUsers.filter(u => u.isBlocked).length;
    const totalSessions = allUsers.reduce((sum, u) => sum + (u.sessionsCount || 0), 0);
    
    document.getElementById('totalUsers').textContent = total;
    document.getElementById('activeUsers').textContent = active;
    document.getElementById('blockedUsers').textContent = blocked;
    document.getElementById('totalSessions').textContent = totalSessions;
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
function displayAdminUsers(users) {
    const usersListDiv = document.getElementById('adminUsersList');
    
    if (users.length === 0) {
        usersListDiv.innerHTML = '<div class="users-loading">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</div>';
        return;
    }
    
    const providerIcons = {
        'google': 'üîµ',
        'telegram': 'üî∑', 
        'local': 'üîò'
    };
    
    usersListDiv.innerHTML = users.map(user => `
        <div class="admin-user-item ${user.isBlocked ? 'blocked' : ''}">
            <div class="admin-user-header">
                <div class="user-main-info">
                    <span class="user-login">${user.login}</span>
                    <span class="user-provider">${providerIcons[user.provider] || 'üîò'} ${user.provider || 'local'}</span>
                    ${user.isBlocked ? '<span class="user-status blocked">–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω</span>' : '<span class="user-status active">–ê–∫—Ç–∏–≤–µ–Ω</span>'}
                </div>
                <div class="admin-user-actions">
                    <button class="info-btn" onclick="showUserDetails('${user.id}')">
                        ‚ÑπÔ∏è –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                    </button>
                    <button class="${user.isBlocked ? 'unblock-btn' : 'block-btn'}" 
                            onclick="toggleUserStatus('${user.id}', '${user.isBlocked ? 'unblock' : 'block'}')">
                        ${user.isBlocked ? '‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å' : 'üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å'}
                    </button>
                    <button class="delete-user-btn" onclick="deleteUser('${user.id}')">
                        üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
                    </button>
                </div>
            </div>
            <div class="user-details">
                <div class="user-info-row">
                    <span><strong>ID:</strong> ${user.id}</span>
                    <span><strong>Email:</strong> ${user.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                    <span><strong>–°–µ—Å—Å–∏–π:</strong> ${user.sessionsCount || 0}</span>
                </div>
                <div class="user-info-row">
                    <span><strong>–°–æ–∑–¥–∞–Ω:</strong> ${new Date(user.createdAt).toLocaleString('ru-RU')}</span>
                    <span><strong>–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</strong> ${new Date(user.lastActiveAt).toLocaleString('ru-RU')}</span>
                </div>
                ${user.name ? `<div class="user-info-row"><span><strong>–ò–º—è:</strong> ${user.name}</span></div>` : ''}
            </div>
        </div>
    `).join('');
}

// –ü–æ–∫–∞–∑ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
function showUserDetails(userId) {
    const user = allUsers.find(u => u.id === userId);
    if (!user) return;
    
    const details = `
–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:

ID: ${user.id}
–õ–æ–≥–∏–Ω: ${user.login}
Email: ${user.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}
–ò–º—è: ${user.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
–ü—Ä–æ–≤–∞–π–¥–µ—Ä: ${user.provider || 'local'}
–°—Ç–∞—Ç—É—Å: ${user.isBlocked ? '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω' : '–ê–∫—Ç–∏–≤–µ–Ω'}
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Å—Å–∏–π: ${user.sessionsCount || 0}

–°–æ–∑–¥–∞–Ω: ${new Date(user.createdAt).toLocaleString('ru-RU')}
–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${new Date(user.lastActiveAt).toLocaleString('ru-RU')}
${user.isBlocked ? `–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω: ${new Date(user.blockedAt).toLocaleString('ru-RU')}` : ''}
    `.trim();
    
    alert(details);
}

// –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function toggleUserStatus(userId, action) {
    const user = allUsers.find(u => u.id === userId);
    if (!user) return;
    
    const actionText = action === 'block' ? '–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å' : '—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å';
    const confirmMessage = `${actionText.charAt(0).toUpperCase() + actionText.slice(1)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "${user.login}"?`;
    
    if (!confirm(confirmMessage)) {
        return;
    }
    
    try {
        const response = await fetch('/api/admin/toggle-user', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ userId, action })
        });
        
        const data = await response.json();
        
        if (data.success) {
            alert(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "${user.login}" —É—Å–ø–µ—à–Ω–æ ${action === 'block' ? '–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω' : '—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'}!`);
            await loadAdminUsers();
        } else {
            alert(`–û—à–∏–±–∫–∞: ${data.error}`);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        alert(`–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: ${error.message}`);
    }
}

// –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function deleteUser(userId) {
    const user = allUsers.find(u => u.id === userId);
    if (!user) return;
    
    const confirmMessage = `–í–ù–ò–ú–ê–ù–ò–ï! –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "${user.login}"?\n\n` +
        `–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —É–¥–∞–ª–∏—Ç:\n` +
        `- –ê–∫–∫–∞—É–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n` +
        `- –í—Å–µ –µ–≥–æ —Å–µ—Å—Å–∏–∏ (${user.sessionsCount || 0})\n` +
        `- –í—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ\n\n` +
        `–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –ù–ï–û–ë–†–ê–¢–ò–ú–û!`;
    
    if (!confirm(confirmMessage)) {
        return;
    }
    
    try {
        const response = await fetch(`/api/admin/delete-user/${userId}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            }
        });
        
        const data = await response.json();
        
        if (data.success) {
            alert(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "${user.login}" —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!`);
            await loadAdminUsers();
        } else {
            alert(`–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ${data.error}`);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        alert(`–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: ${error.message}`);
    }
}

// –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
function applyUsersFilters() {
    const statusFilter = document.getElementById('userStatusFilter').value;
    const searchFilter = document.getElementById('userSearchFilter').value.toLowerCase();
    
    let filteredUsers = allUsers;
    
    // –§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É
    if (statusFilter !== 'all') {
        if (statusFilter === 'active') {
            filteredUsers = filteredUsers.filter(u => !u.isBlocked);
        } else if (statusFilter === 'blocked') {
            filteredUsers = filteredUsers.filter(u => u.isBlocked);
        } else {
            filteredUsers = filteredUsers.filter(u => u.provider === statusFilter);
        }
    }
    
    // –ü–æ–∏—Å–∫ –ø–æ –ª–æ–≥–∏–Ω—É –∏–ª–∏ email
    if (searchFilter) {
        filteredUsers = filteredUsers.filter(u => 
            u.login.toLowerCase().includes(searchFilter) || 
            (u.email && u.email.toLowerCase().includes(searchFilter))
        );
    }
    
    displayAdminUsers(filteredUsers);
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function setupEventHandlers() {
    // –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    document.getElementById('refreshUsersBtn').addEventListener('click', loadAdminUsers);
    
    // –§–∏–ª—å—Ç—Ä—ã
    document.getElementById('userStatusFilter').addEventListener('change', applyUsersFilters);
    document.getElementById('userSearchFilter').addEventListener('input', applyUsersFilters);
}