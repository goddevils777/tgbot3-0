// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω—ã–º –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–º –∑–∞–ø–∏—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏
class HistoryDetailManager {
    constructor() {
        this.storageKey = 'telegram_bot_history';
        this.init();
    }

    init() {
        this.loadRecordDetails();
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–∑ URL
    getUrlParams() {
        const params = new URLSearchParams(window.location.search);
        return {
            type: params.get('type'),
            id: params.get('id')
        };
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–µ—Ç–∞–ª–µ–π –∑–∞–ø–∏—Å–∏
    loadRecordDetails() {
        const { type, id } = this.getUrlParams();
        
        if (!type || !id) {
            this.showError('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã');
            return;
        }

        const history = this.getHistory();
        const record = history[type]?.find(item => item.id === id);

        if (!record) {
            this.showError('–ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            return;
        }

        this.displayRecordDetails(record, type);
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –∏–∑ localStorage
    getHistory() {
        try {
            const history = localStorage.getItem(this.storageKey);
            return history ? JSON.parse(history) : {
                search: [],
                livestream: [],
                autosearch: []
            };
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏:', error);
            return { search: [], livestream: [], autosearch: [] };
        }
    }

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –∑–∞–ø–∏—Å–∏
    displayRecordDetails(record, type) {
        const detailTitle = document.getElementById('detailTitle');
        const recordInfo = document.getElementById('recordInfo');
        const contentTitle = document.getElementById('contentTitle');
        const detailData = document.getElementById('detailData');

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        const typeNames = {
            'search': '–ü–æ–∏—Å–∫ —Å–æ–æ–±—â–µ–Ω–∏–π',
            'livestream': 'Live Stream',
            'autosearch': '–ê–≤—Ç–æ–ø–æ–∏—Å–∫'
        };
        
        detailTitle.textContent = `üìä ${typeNames[type]} - –î–µ—Ç–∞–ª–∏`;

        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø–∏—Å–∏
        recordInfo.innerHTML = this.generateRecordInfo(record, type);

        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        if (type === 'search') {
            this.displaySearchDetails(record, contentTitle, detailData);
        } else if (type === 'livestream') {
            this.displayLivestreamDetails(record, contentTitle, detailData);
        } else if (type === 'autosearch') {
            this.displayAutosearchDetails(record, contentTitle, detailData);
        }
    }

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–±—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–ø–∏—Å–∏
    generateRecordInfo(record, type) {
        const date = new Date(record.timestamp).toLocaleString('ru-RU');
        
        let specificInfo = '';
        if (type === 'search') {
            specificInfo = `
                <p><strong>–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞:</strong> ${record.keywords?.join(', ') || '–ù–µ —É–∫–∞–∑–∞–Ω—ã'}</p>
                <p><strong>–ì—Ä—É–ø–ø –≤—ã–±—Ä–∞–Ω–æ:</strong> ${record.groupsCount || 0}</p>
                <p><strong>–ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π:</strong> ${record.messagesCount || 0}</p>
            `;
        } else if (type === 'livestream') {
            specificInfo = `
                <p><strong>–ö–∞–Ω–∞–ª:</strong> ${record.channelName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</p>
                <p><strong>ID –∫–∞–Ω–∞–ª–∞:</strong> ${record.channelId || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</p>
                <p><strong>–ù–∞–π–¥–µ–Ω–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</strong> ${record.participantsCount || 0}</p>
            `;
        } else if (type === 'autosearch') {
            specificInfo = `
                <p><strong>–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞:</strong> ${record.keywords?.join(', ') || '–ù–µ —É–∫–∞–∑–∞–Ω—ã'}</p>
                <p><strong>–ì—Ä—É–ø–ø –æ—Ç—Å–ª–µ–∂–∏–≤–∞–ª–æ—Å—å:</strong> ${record.groupsCount || 0}</p>
                <p><strong>–ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π:</strong> ${record.messagesCount || 0}</p>
            `;
        }

        return `
            <div class="record-header">
                <h3>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–ø–∏—Å–∏</h3>
                <span class="record-date">–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: ${date}</span>
            </div>
            <div class="record-details">
                ${specificInfo}
            </div>
        `;
    }

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –ø–æ–∏—Å–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π

    displaySearchDetails(record, contentTitle, detailData) {
        contentTitle.textContent = `–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (${record.messagesCount || 0})`;
        
        if (!record.messages || record.messages.length === 0) {
            detailData.innerHTML = '<p class="no-data">–°–æ–æ–±—â–µ–Ω–∏—è –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã</p>';
            return;
        }

        // –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –Ω–∏–∫–Ω–µ–π–º—ã
        const uniqueNicknames = this.getUniqueNicknames(record.messages);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–æ–≤
        const copyButton = `
            <div class="detail-actions">
                <button onclick="copyNicknamesFromDetail()" class="copy-nicknames-btn">
                    üë• –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –Ω–∏–∫–Ω–µ–π–º—ã (${uniqueNicknames.length})
                </button>
            </div>
        `;

        const messagesHtml = record.messages.map((message, index) => `
            <div class="message-detail-item">
                <div class="message-detail-header">
                    <span class="message-number">#${index + 1}</span>
                    <span class="message-group">${message.groupName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞'}</span>
                    <span class="message-sender">${message.sender || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å'}</span>
                    <span class="message-date">${message.date || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –¥–∞—Ç–∞'}</span>
                </div>
                <div class="message-detail-text">${message.text || '–¢–µ–∫—Å—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}</div>
                ${message.link ? `<div class="message-link"><a href="${message.link}" target="_blank">–û—Ç–∫—Ä—ã—Ç—å –≤ Telegram</a></div>` : ''}
            </div>
        `).join('');

        detailData.innerHTML = copyButton + messagesHtml;
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
        window.currentMessages = record.messages;
    }

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π Live Stream
    displayLivestreamDetails(record, contentTitle, detailData) {
        contentTitle.textContent = `–£—á–∞—Å—Ç–Ω–∏–∫–∏ —Å—Ç—Ä–∏–º–∞ (${record.participantsCount || 0})`;
        
        if (!record.participants || record.participants.length === 0) {
            detailData.innerHTML = '<p class="no-data">–£—á–∞—Å—Ç–Ω–∏–∫–∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã</p>';
            return;
        }

        const participantsHtml = record.participants.map((participant, index) => `
            <div class="participant-detail-item">
                <div class="participant-detail-header">
                    <span class="participant-number">#${index + 1}</span>
                    <span class="participant-name">${participant.name || '–ë–µ–∑ –∏–º–µ–Ω–∏'}</span>
                    <span class="participant-contact">
                        ${participant.username ? `@${participant.username}` : 
                          participant.phone ? participant.phone : '–ö–æ–Ω—Ç–∞–∫—Ç —Å–∫—Ä—ã—Ç'}
                    </span>
                </div>
                <div class="participant-detail-meta">
                    <span class="first-seen">–ó–∞–º–µ—á–µ–Ω: ${participant.firstSeen || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</span>
                    ${participant.id ? `<span class="participant-id">ID: ${participant.id}</span>` : ''}
                </div>
            </div>
        `).join('');

        detailData.innerHTML = participantsHtml;
    }

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –∞–≤—Ç–æ–ø–æ–∏—Å–∫–∞
    displayAutosearchDetails(record, contentTitle, detailData) {
        contentTitle.textContent = `–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–≤—Ç–æ–ø–æ–∏—Å–∫–∞ (${record.messagesCount || 0})`;
        
        if (!record.results || record.results.length === 0) {
            detailData.innerHTML = '<p class="no-data">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã</p>';
            return;
        }

        const resultsHtml = record.results.map((result, index) => `
            <div class="autosearch-detail-item">
                <div class="autosearch-detail-header">
                    <span class="result-number">#${index + 1}</span>
                    <span class="result-group">${result.groupName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞'}</span>
                    <span class="result-sender">${result.sender || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å'}</span>
                </div>
                <div class="autosearch-detail-text">${result.text || '–¢–µ–∫—Å—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}</div>
            </div>
        `).join('');

        detailData.innerHTML = resultsHtml;
    }

    showError(message) {
        document.getElementById('recordInfo').innerHTML = `
            <div class="error-message">
                <h3>–û—à–∏–±–∫–∞</h3>
                <p>${message}</p>
                <a href="history.html">‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∏—Å—Ç–æ—Ä–∏–∏</a>
            </div>
        `;
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –Ω–∏–∫–Ω–µ–π–º–æ–≤ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏–π
    getUniqueNicknames(messages) {
        const nicknames = messages
            .map(message => message.sender)
            .filter(sender => sender && sender !== '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å')
            .filter((value, index, self) => self.indexOf(value) === index); // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
        
        return nicknames;
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–æ–≤ –∏–∑ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
function copyNicknamesFromDetail() {
    if (!window.currentMessages) {
        notify.error('–°–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
        return;
    }
    
    const nicknames = window.currentMessages
        .map(message => message.sender)
        .filter(sender => sender && sender !== '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å')
        .filter((value, index, self) => self.indexOf(value) === index) // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
        .join('\n');
    
    if (!nicknames) {
        notify.warning('–ù–∏–∫–Ω–µ–π–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        return;
    }
    
    // –ö–æ–ø–∏—Ä—É–µ–º –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
    navigator.clipboard.writeText(nicknames).then(() => {
        const count = nicknames.split('\n').length;
        notify.success(`–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ ${count} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –Ω–∏–∫–Ω–µ–π–º–æ–≤`);
    }).catch(err => {
        console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', err);
        notify.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞');
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    new HistoryDetailManager();
});