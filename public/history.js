// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–µ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
class HistoryManager {
    constructor() {
        this.storageKey = 'telegram_bot_history';
        this.init();
    }

    init() {
        console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è HistoryManager');
        this.loadHistory();
        this.setupEventListeners();
    }

    getHistory() {
        let allHistory = JSON.parse(localStorage.getItem('telegram_bot_history') || '[]');
        
        // –ï—Å–ª–∏ —ç—Ç–æ —Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç –æ–±—ä–µ–∫—Ç–∞ - –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –º–∞—Å—Å–∏–≤
        if (!Array.isArray(allHistory) && allHistory.search) {
            console.log('–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç –∏—Å—Ç–æ—Ä–∏–∏');
            const converted = [
                ...allHistory.search || [],
                ...allHistory.livestream || [],
                ...allHistory.autosearch || []
            ];
            localStorage.setItem('telegram_bot_history', JSON.stringify(converted));
            allHistory = converted;
        }
        
        // –ï—Å–ª–∏ –≤—Å—ë –µ—â—ë –Ω–µ –º–∞—Å—Å–∏–≤ - —Å–æ–∑–¥–∞—ë–º –ø—É—Å—Ç–æ–π
        if (!Array.isArray(allHistory)) {
            allHistory = [];
            localStorage.setItem('telegram_bot_history', JSON.stringify([]));
        }
        
        return allHistory;
    }

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –≤ localStorage
    saveHistory(history) {
        try {
            localStorage.setItem(this.storageKey, JSON.stringify(history));
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏:', error);
        }
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –∏—Å—Ç–æ—Ä–∏—é
    addToHistory(type, data) {
        const history = this.getHistory();
        const record = {
            id: Date.now().toString(),
            type: type,
            timestamp: Date.now(),
            ...data
        };
        
        history.unshift(record); // –î–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞
        
        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π (–º–∞–∫—Å–∏–º—É–º 50)
        if (history.length > 50) {
            history = history.slice(0, 50);
        }
        
        localStorage.setItem('telegram_bot_history', JSON.stringify(history));
        this.loadHistory(); // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        
        return record.id;
    }

    // –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏
    removeFromHistory(type, id) {
        if (confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç—É –∑–∞–ø–∏—Å—å –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏?')) {
            let allHistory = this.getHistory();
            const filteredHistory = allHistory.filter(item => item.id !== id);
            localStorage.setItem('telegram_bot_history', JSON.stringify(filteredHistory));
            this.loadHistory();
        }
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    setupEventListeners() {
        console.log('=== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π ===');
        
        document.addEventListener('click', async (e) => {
            console.log('–ö–ª–∏–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:', e.target);
            
            // –ï—Å–ª–∏ –∫–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ —É–¥–∞–ª–µ–Ω–∏—è - —Ç–æ–ª—å–∫–æ —É–¥–∞–ª—è–µ–º
            if (e.target.classList.contains('btn-delete')) {
                console.log('–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ —É–¥–∞–ª–µ–Ω–∏—è');
                e.stopPropagation();
                e.preventDefault();
                return; // onclick –≤ HTML —É–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ
            }
            
            // –ï—Å–ª–∏ –∫–ª–∏–∫ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ –∏—Å—Ç–æ—Ä–∏–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            if (e.target.closest('.history-item')) {
                console.log('–ö–ª–∏–∫ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ –∏—Å—Ç–æ—Ä–∏–∏');
                const historyItem = e.target.closest('.history-item');
                const historyId = historyItem.dataset.id;
                console.log('ID –∏—Å—Ç–æ—Ä–∏–∏:', historyId);
                
                // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é —Å —Å–µ—Ä–≤–µ—Ä–∞
                try {
                    const response = await fetch(`/api/get-search-history/${historyId}`);
                    const data = await response.json();
                    
                    if (data.success) {
                        this.displayHistoryResults(data.history);
                    } else {
                        alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏: ' + data.error);
                    }
                } catch (error) {
                    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏:', error);
                    alert('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
                }
            }
        });
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏
    loadHistory() {
        const history = this.getHistory();
        console.log('–ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é:', history.length, '–∑–∞–ø–∏—Å–µ–π');
        
        this.displaySearchHistory(history);
        this.displayLivestreamHistory(history);
        this.displayAutosearchHistory(history);
    }

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞
    displaySearchHistory(history) {
        const container = document.getElementById('searchHistory');
        
        if (!history || !Array.isArray(history)) {
            container.innerHTML = '<p>–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∏—Å–∫–∞ –ø—É—Å—Ç–∞</p>';
            return;
        }
        
        const searchHistory = history.filter(item => item.type === 'search');
        
        if (searchHistory.length === 0) {
            container.innerHTML = '<p>–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∏—Å–∫–∞ –ø—É—Å—Ç–∞</p>';
            return;
        }

        container.innerHTML = searchHistory.map(item => `
            <div class="history-item" data-id="${item.id}" style="cursor: pointer;">
                <div class="history-header">
                    <span class="history-title">–ü–æ–∏—Å–∫: ${item.keywords?.join(', ') || '–ë–µ–∑ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤'}</span>
                    <span class="history-date">${new Date(item.timestamp).toLocaleString('ru-RU')}</span>
                </div>
                <div class="history-details">
                    <p><strong>–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞:</strong> ${item.keywords?.join(', ') || '–ù–µ —É–∫–∞–∑–∞–Ω—ã'}</p>
                    <p><strong>–ì—Ä—É–ø–ø—ã:</strong> ${item.groupsList && item.groupsList.length > 0 
                                ? item.groupsList.map(group => group.name).join(', ') 
                                : `–í—ã–±—Ä–∞–Ω–æ –≥—Ä—É–ø–ø: ${item.groupsCount || 0}`}</p>
                    <p><strong>–ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π:</strong> ${item.messagesCount || 0}</p>
                </div>
                <div class="history-actions">
                    <button onclick="historyManager.removeFromHistory('search', '${item.id}')" class="btn-delete">üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>
                </div>
            </div>
        `).join('');
    }

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ Live Stream
    displayLivestreamHistory(history) {
        const container = document.getElementById('livestreamHistory');
        
        if (!history || !Array.isArray(history)) {
            container.innerHTML = '<p>–ò—Å—Ç–æ—Ä–∏—è Live Stream –ø—É—Å—Ç–∞</p>';
            return;
        }
        
        const livestreamHistory = history.filter(item => item.type === 'livestream');
        
        if (livestreamHistory.length === 0) {
            container.innerHTML = '<p>–ò—Å—Ç–æ—Ä–∏—è Live Stream –ø—É—Å—Ç–∞</p>';
            return;
        }

        container.innerHTML = livestreamHistory.map(item => `
            <div class="history-item" data-id="${item.id}" style="cursor: pointer;">
                <div class="history-header">
                    <span class="history-title">Live Stream: ${item.channelName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª'}</span>
                    <span class="history-date">${new Date(item.timestamp).toLocaleString('ru-RU')}</span>
                </div>
                <div class="history-details">
                    <p><strong>–ö–∞–Ω–∞–ª:</strong> ${item.channelName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</p>
                    <p><strong>–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</strong> ${item.participantsCount || 0}</p>
                </div>
                <div class="history-actions">
                    <button onclick="historyManager.removeFromHistory('livestream', '${item.id}')" class="btn-delete">üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>
                </div>
            </div>
        `).join('');
    }

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –∞–≤—Ç–æ–ø–æ–∏—Å–∫–∞
    displayAutosearchHistory(history) {
        const container = document.getElementById('autosearchHistory');
        
        if (!history || !Array.isArray(history)) {
            container.innerHTML = '<p>–ò—Å—Ç–æ—Ä–∏—è –∞–≤—Ç–æ–ø–æ–∏—Å–∫–∞ –ø—É—Å—Ç–∞</p>';
            return;
        }
        
        const autosearchHistory = history.filter(item => item.type === 'autosearch');
        
        if (autosearchHistory.length === 0) {
            container.innerHTML = '<p>–ò—Å—Ç–æ—Ä–∏—è –∞–≤—Ç–æ–ø–æ–∏—Å–∫–∞ –ø—É—Å—Ç–∞</p>';
            return;
        }

        container.innerHTML = autosearchHistory.map(item => `
            <div class="history-item" data-id="${item.id}" style="cursor: pointer;">
                <div class="history-header">
                    <span class="history-title">–ê–≤—Ç–æ–ø–æ–∏—Å–∫: ${item.keywords?.join(', ') || '–ë–µ–∑ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤'}</span>
                    <span class="history-date">${new Date(item.timestamp).toLocaleString('ru-RU')}</span>
                </div>
                <div class="history-details">
                    <p><strong>–ì—Ä—É–ø–ø—ã:</strong> ${item.groupsCount || 0}</p>
                    <p><strong>–ù–∞–π–¥–µ–Ω–æ:</strong> ${item.messagesCount || 0} —Å–æ–æ–±—â–µ–Ω–∏–π</p>
                </div>
                <div class="history-actions">
                    <button onclick="historyManager.removeFromHistory('autosearch', '${item.id}')" class="btn-delete">üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>
                </div>
            </div>
        `).join('');
    }

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏—Å—Ç–æ—Ä–∏–∏
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏—Å—Ç–æ—Ä–∏–∏
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏—Å—Ç–æ—Ä–∏–∏
    displayHistoryResults(historyData) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è history-detail.html
        sessionStorage.setItem('historyDetailData', JSON.stringify(historyData));
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        window.location.href = `history-detail.html?type=search&id=${historyData.id}`;
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    window.historyManager = new HistoryManager();
});